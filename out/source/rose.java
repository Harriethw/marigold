/* autogenerated by Processing revision 1277 on 2022-02-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class rose extends PApplet {


int yellow = 0xFFFFF74D;
int lightOrange = 0xFFFAC53F;
int mediumOrange = 0xFFFFB905;
int darkOrange = 0xFFFF980F;

int[] colors = {lightOrange, mediumOrange, darkOrange,mediumOrange, darkOrange};

int layers = 1;
float petalSize = 20;
boolean isGrowing = true;

 public void setup() {
  /* size commented out by preprocessor */;
  frameRate(6);
  // noStroke();
  draw();
}

 public void draw() {
  background(255);
  drawRose();
  // noLoop();
  println("layers: "+layers);
  println("petalSize: "+petalSize);
  setIsGrowing();
}


 public void drawRose() {
  translate(width/2, height/2);
  float rotation = 45;
  float layerPetalSize = petalSize;
  pushMatrix();
  for (int i = 0; i < layers; ++i) {
    translate(0,0, -i);
    drawPetals(layerPetalSize);
    // rotate(radians(rotation));
    if (i < 7) {
    layerPetalSize = layerPetalSize * 1.4f;
    } else {
      layerPetalSize = layerPetalSize * 1.5f;
    }
  }
  popMatrix();
  if (isGrowing) {
    layers = layers + 1;
  } else {
    layers = layers - 1;
  }
  drawCenter();
}

 public void drawPetals(float petalSize) {
  //TODO: increase number of petals depending on layer;
  //TODO: grow petals over time until max size, then move on to next layer - have a variable to hold which layer is growing
  for (int i = 0; i < 8; i++) {
    translate(0,0, -i);
    fill(colors[PApplet.parseInt(random(3))]);
    // fill(colors[i]);
    ellipse(0, -(petalSize / 1.8f), petalSize, petalSize);
    rotate(radians(45));
    // rotate(radians(frameCount + mouseX));
  }
}

 public void drawCenter() {
  pushMatrix();
    translate(0,0,+1);
    fill(yellow);
    ellipse(0, 0, 10, 10);
  popMatrix();
}

 public void setIsGrowing() {
  if (layers == 13){
    isGrowing = false;
  } else if (layers == 1) {
    isGrowing = true;
  }
}


  public void settings() { size(800, 800, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "rose" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
